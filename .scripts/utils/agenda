#!/bin/bash

###############################################################################
# TITLE: Agenda
# AUTHOR: drfailer
# DATE: Sat Dec 18 07:09:23 PM CET 2021
# DESCRIPTION: TODO list app
###############################################################################

###############################################################################
# Global variables:
###############################################################################

# agenda directory:
AGENDA_DIR="$HOME/Documents/Agenda/"

# look in the agenda dirctory if the current todo list exists:
curMondayDate=$(expr $(date +%d) + 1 - $(date +%u))
file="$curMondayDate$(date +%m%Y).todo"


###############################################################################
# Help message:
###############################################################################
displayHelpMessage() {
cat << ENDOFMESSAGE
Usage: agenda <option>

Available options:
  -r, --report    launch the app in edit mode
  -l, --list      launch the app in read mode
  -h, --help      display help message

Note:
  If the app is launched without any option, it automatically startup in read
  mode.
ENDOFMESSAGE
}


###############################################################################
# Utils functions:
###############################################################################

createFile() {
  # if the file is not already created:
  if [ ! -f $AGENDA_DIR$file ]
  then
    file="$curMondayDate$(date +%m%Y).todo"
cat << EOF >> $AGENDA_DIR$file
---
title: TODOS $(date +%d-%m-%Y)
---


# üéì Cours

- [ ] TODO


# üè† Maison

- [ ] TODO


# üß≥ Valise

- [ ] TAKE
EOF
  fi
}

# print: TODOS/ALL
printReport() {
  if [ ! -f $1 ]
  then
    echo "none"
  else
    echo "$(grep "\[x\]" $1 | wc -l)/$(grep "\[[x -]\]" $1 | wc -l)"
  fi
}

listUncompletedTasks() {
  if [ -f $AGENDA_DIR$file ]
  then
    grep "\[ \]" $AGENDA_DIR$file | sed 's/- \[ \]/‚ö†Ô∏è/g'
  else
    echo "No TODOs for this week."
  fi
}

listAllTasks() {
  if [ -f $AGENDA_DIR$file ]
  then
cat << EOF
TODO:
$(grep "\[ \]" $AGENDA_DIR$file | sed 's/- \[ \]/  ‚ö†Ô∏è/g')

DONE:
$(grep "\[x\]" $AGENDA_DIR$file | sed 's/- \[x\]/  ‚úÖ/g')

PENDING:
$(grep "\[-\]" $AGENDA_DIR$file | sed 's/- \[-\]/  üìå/g')

ABORTED:
$(grep "\[#\]" $AGENDA_DIR$file | sed 's/- \[#\]/  ‚ùå/g')
EOF
  else
    echo "No TODOs for this week."
  fi
}


###############################################################################
# Main:
###############################################################################

main() {
  if [ $# -eq 0 ]
  then
    # Open the agenda file
    createFile
    nvim "$AGENDA_DIR$file"
  else
    case "$1" in
      -r | --report)
        printReport "$AGENDA_DIR$file"
        ;;
      -l | --list)
        listUncompletedTasks
        ;;
      -a | --list-all)
        listAllTasks
        ;;
      -h | --help)
        displayHelpMessage
        ;;
      *)
        echo "Unknown option, try to use the --help flag"
        ;;
    esac
  fi
}

main $1
