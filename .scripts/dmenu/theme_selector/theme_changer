#!/bin/python3

###############################################################################
#                            Theme selector script                            #
###############################################################################
# Simple script made to be interfaced using dmenu which will change the theme
# of xmobar, alacritty and vim automatically.
#
# author: drfailer
###############################################################################

import sys      # used to access to command argument

home = "/home/drfailer/"
theme_file = home + ".scripts/dmenu/theme_selector/themes.txt"
alacrittyPath = home + ".config/alacritty/alacritty.yml"
xmonadPath = home + ".xmonad/xmonad.hs"
vimPath = home + ".config/nvim/init.vim"
themesPath = home +".config/alacritty/themes.txt"

# help string for --help flag
help = """This program is made to change rice theme, give -tn flag where n
correspond to the theme number you want"""


def changeAlacrittyTheme(theme):
    alacritty = open(alacrittyPath, "r")
    lns = alacritty.readlines()

    def findLineAlacritty():
        for i, l in enumerate(lns):
            if l == "  # Normal colors\n":
                return i

    ln = findLineAlacritty()
    if ln != None:
        # selecting the right theme in themes.txt file
        themes = open(theme_file, "r")
        theme_lns = themes.readlines()
        start_line = 24 * theme
        new_theme = theme_lns[start_line:start_line + 24]

        # changing lines
        lns = lns[:(ln - 3)] + new_theme + lns[(ln + 21):]

        # this part is not checked
        if theme == 0:
            lns[14] = "    background: \"#1e2127\"\n"
        else:
            lns[14] = "    background: \"#000000\"\n"


    # write changes
    alacritty = open(alacrittyPath, "w")
    alacritty.writelines(lns)


# currentTheme = themeX  ->  currentTheme = themeY
def changeXmobarTheme(theme):
    xmonad = open(xmonadPath, "r")
    lns = xmonad.readlines()

    def findLineXmobar():
        for i, l in enumerate(lns):
            if l[:-2] == "currentTheme = theme":
                return i


    ln = findLineXmobar()
    if ln != None:
        lns[ln] = f"currentTheme = theme{theme}\n"
    xmonad = open(xmonadPath, "w")
    xmonad.writelines(lns)


# comment/uncomment lines for swichig between habanight/base16-black-metal
def changeVimTheme(theme):
    vim = open(vimPath, "r")
    lns = vim.readlines()

    def findLineVim():
        for i, l in enumerate(lns):
            if l ==  "\"source $HOME/.config/nvim/themes/dark.vim\n" \
            or l ==  "source $HOME/.config/nvim/themes/dark.vim\n":
                return i

    ln = findLineVim()
    if ln != None:
        if theme == 2:
            lns[ln] = "\"source $HOME/.config/nvim/themes/dark.vim\n"
            lns[ln+1] = "source $HOME/.config/nvim/themes/metal.vim\n"
        else:
            lns[ln] = "source $HOME/.config/nvim/themes/dark.vim\n"
            lns[ln+1] = "\"source $HOME/.config/nvim/themes/metal.vim\n"

    # write changes
    vim = open(vimPath, "w")
    vim.writelines(lns)


def parseArgs(argv):
    def handleArg(arg):
        if arg[:-1] == "--vim=":
            changeVimTheme(int(arg[-1]))
        elif arg[:-1] == "--term=":
            changeAlacrittyTheme(int(arg[-1]))
        elif arg[:-1] == "--wm=":
            changeXmobarTheme(int(arg[-1]))
        else:
            print("ERROR: invalid argument, try using '--help' flag for more informations.")
            return

    if len(argv) > 1:
        for a in argv[1:]:
            handleArg(a)


def main():
    parseArgs(sys.argv)


if __name__ == '__main__':
    main()
